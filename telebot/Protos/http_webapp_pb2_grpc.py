# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import http_webapp_pb2 as http__webapp__pb2


class WebAppServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRosterAssignmentsForWebApp = channel.unary_unary(
                '/http_webapp.WebAppServices/GetRosterAssignmentsForWebApp',
                request_serializer=http__webapp__pb2.HTTPAssignmentsGetRequest.SerializeToString,
                response_deserializer=http__webapp__pb2.HTTPMessage.FromString,
                )
        self.PostWReportFromWebApp = channel.unary_unary(
                '/http_webapp.WebAppServices/PostWReportFromWebApp',
                request_serializer=http__webapp__pb2.HTTPReportPostRequest.SerializeToString,
                response_deserializer=http__webapp__pb2.HTTPMessage.FromString,
                )
        self.CheckRegistrationCode = channel.unary_unary(
                '/http_webapp.WebAppServices/CheckRegistrationCode',
                request_serializer=http__webapp__pb2.HTTPMessage.SerializeToString,
                response_deserializer=http__webapp__pb2.HTTPMessage.FromString,
                )
        self.PostRegistrationFormFromWebApp = channel.unary_unary(
                '/http_webapp.WebAppServices/PostRegistrationFormFromWebApp',
                request_serializer=http__webapp__pb2.HTTPRegistrationFormRequest.SerializeToString,
                response_deserializer=http__webapp__pb2.HTTPMessage.FromString,
                )


class WebAppServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRosterAssignmentsForWebApp(self, request, context):
        """<><> Telegram WebApp - HTTP <><>
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostWReportFromWebApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckRegistrationCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostRegistrationFormFromWebApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WebAppServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRosterAssignmentsForWebApp': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRosterAssignmentsForWebApp,
                    request_deserializer=http__webapp__pb2.HTTPAssignmentsGetRequest.FromString,
                    response_serializer=http__webapp__pb2.HTTPMessage.SerializeToString,
            ),
            'PostWReportFromWebApp': grpc.unary_unary_rpc_method_handler(
                    servicer.PostWReportFromWebApp,
                    request_deserializer=http__webapp__pb2.HTTPReportPostRequest.FromString,
                    response_serializer=http__webapp__pb2.HTTPMessage.SerializeToString,
            ),
            'CheckRegistrationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckRegistrationCode,
                    request_deserializer=http__webapp__pb2.HTTPMessage.FromString,
                    response_serializer=http__webapp__pb2.HTTPMessage.SerializeToString,
            ),
            'PostRegistrationFormFromWebApp': grpc.unary_unary_rpc_method_handler(
                    servicer.PostRegistrationFormFromWebApp,
                    request_deserializer=http__webapp__pb2.HTTPRegistrationFormRequest.FromString,
                    response_serializer=http__webapp__pb2.HTTPMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'http_webapp.WebAppServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WebAppServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRosterAssignmentsForWebApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/http_webapp.WebAppServices/GetRosterAssignmentsForWebApp',
            http__webapp__pb2.HTTPAssignmentsGetRequest.SerializeToString,
            http__webapp__pb2.HTTPMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostWReportFromWebApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/http_webapp.WebAppServices/PostWReportFromWebApp',
            http__webapp__pb2.HTTPReportPostRequest.SerializeToString,
            http__webapp__pb2.HTTPMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckRegistrationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/http_webapp.WebAppServices/CheckRegistrationCode',
            http__webapp__pb2.HTTPMessage.SerializeToString,
            http__webapp__pb2.HTTPMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostRegistrationFormFromWebApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/http_webapp.WebAppServices/PostRegistrationFormFromWebApp',
            http__webapp__pb2.HTTPRegistrationFormRequest.SerializeToString,
            http__webapp__pb2.HTTPMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
