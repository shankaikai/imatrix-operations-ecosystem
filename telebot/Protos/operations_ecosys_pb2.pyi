"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import iot_prototype_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _OrderBy:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _OrderByEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OrderBy.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASC: _OrderBy.ValueType  # 0
    DESC: _OrderBy.ValueType  # 1
class OrderBy(_OrderBy, metaclass=_OrderByEnumTypeWrapper):
    pass

ASC: OrderBy.ValueType  # 0
DESC: OrderBy.ValueType  # 1
global___OrderBy = OrderBy


class User(google.protobuf.message.Message):
    """Admin

    **************************************************************************
                                 USER MESSAGES                               *
    **************************************************************************

    All users who use the operations ecosystem.
    TODO: decide if we want to have an inactive field for users
          so that we don't need to delete users completely.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _UserType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UserTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[User._UserType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ISPECIALIST: User._UserType.ValueType  # 0
        SECURITY_GUARD: User._UserType.ValueType  # 1
        CONTROLLER: User._UserType.ValueType  # 2
        MANAGER: User._UserType.ValueType  # 3
    class UserType(_UserType, metaclass=_UserTypeEnumTypeWrapper):
        pass

    ISPECIALIST: User.UserType.ValueType  # 0
    SECURITY_GUARD: User.UserType.ValueType  # 1
    CONTROLLER: User.UserType.ValueType  # 2
    MANAGER: User.UserType.ValueType  # 3

    USER_ID_FIELD_NUMBER: builtins.int
    USER_TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_FIELD_NUMBER: builtins.int
    TELEGRAM_HANDLE_FIELD_NUMBER: builtins.int
    USER_SECURITY_IMG_FIELD_NUMBER: builtins.int
    IS_PART_TIMER_FIELD_NUMBER: builtins.int
    TELE_USER_ID_FIELD_NUMBER: builtins.int
    user_id: builtins.int
    user_type: global___User.UserType.ValueType
    name: typing.Text
    email: typing.Text
    phone_number: typing.Text
    telegram_handle: typing.Text
    user_security_img: typing.Text
    is_part_timer: builtins.bool
    tele_user_id: builtins.int
    def __init__(self,
        *,
        user_id: builtins.int = ...,
        user_type: global___User.UserType.ValueType = ...,
        name: typing.Text = ...,
        email: typing.Text = ...,
        phone_number: typing.Text = ...,
        telegram_handle: typing.Text = ...,
        user_security_img: typing.Text = ...,
        is_part_timer: builtins.bool = ...,
        tele_user_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["email",b"email","is_part_timer",b"is_part_timer","name",b"name","phone_number",b"phone_number","tele_user_id",b"tele_user_id","telegram_handle",b"telegram_handle","user_id",b"user_id","user_security_img",b"user_security_img","user_type",b"user_type"]) -> None: ...
global___User = User

class UsersResponse(google.protobuf.message.Message):
    """Passing around multiple users in one message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def user(self) -> global___User: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        user: typing.Optional[global___User] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["response",b"response","user",b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["response",b"response","user",b"user"]) -> None: ...
global___UsersResponse = UsersResponse

class UserFilter(google.protobuf.message.Message):
    """Filter the types of users to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[UserFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        USER_ID: UserFilter._Field.ValueType  # 0
        TYPE: UserFilter._Field.ValueType  # 1
        NAME: UserFilter._Field.ValueType  # 2
        EMAIL: UserFilter._Field.ValueType  # 3
        PHONE_NUMBER: UserFilter._Field.ValueType  # 4
        TELEGRAM_HANDLE: UserFilter._Field.ValueType  # 5
        IS_PART_TIMER: UserFilter._Field.ValueType  # 6
        TELEGRAM_USER_ID: UserFilter._Field.ValueType  # 7
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    USER_ID: UserFilter.Field.ValueType  # 0
    TYPE: UserFilter.Field.ValueType  # 1
    NAME: UserFilter.Field.ValueType  # 2
    EMAIL: UserFilter.Field.ValueType  # 3
    PHONE_NUMBER: UserFilter.Field.ValueType  # 4
    TELEGRAM_HANDLE: UserFilter.Field.ValueType  # 5
    IS_PART_TIMER: UserFilter.Field.ValueType  # 6
    TELEGRAM_USER_ID: UserFilter.Field.ValueType  # 7

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___UserFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___UserFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___UserFilter = UserFilter

class UserQuery(google.protobuf.message.Message):
    """Get specific types users as specified in the Filter. 
    If one wants to get all objects, leave filters empty. 
    A default limit of 10 will be used if the field is empty.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTERS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserFilter]: ...
    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def order_by(self) -> global___OrderByUser:
        """Order the queries, by default the order is desc by creation date"""
        pass
    def __init__(self,
        *,
        filters: typing.Optional[typing.Iterable[global___UserFilter]] = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        order_by: typing.Optional[global___OrderByUser] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip"]) -> None: ...
global___UserQuery = UserQuery

class OrderByUser(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___UserFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___UserFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByUser = OrderByUser

class FullUser(google.protobuf.message.Message):
    """This message is mostly used by the internal server
    and for the creation of new users only. 
    There should be no other reasons to pass around these 
    confidential messages.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    USER_FIELD_NUMBER: builtins.int
    NONCE_FIELD_NUMBER: builtins.int
    SECURITY_STRING_FIELD_NUMBER: builtins.int
    HASHED_PASSWORD_FIELD_NUMBER: builtins.int
    @property
    def user(self) -> global___User: ...
    nonce: typing.Text
    security_string: typing.Text
    hashed_password: typing.Text
    def __init__(self,
        *,
        user: typing.Optional[global___User] = ...,
        nonce: typing.Text = ...,
        security_string: typing.Text = ...,
        hashed_password: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user",b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hashed_password",b"hashed_password","nonce",b"nonce","security_string",b"security_string","user",b"user"]) -> None: ...
global___FullUser = FullUser

class Client(google.protobuf.message.Message):
    """**************************************************************************
                                 CLIENT MESSAGES                              *
    **************************************************************************

    All clients who hire the company to protect their compounds. 
    TODO: decide if we want to have an inactive field for clients
          so that we don't need to delete cleints completely.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLIENT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ABBREVIATION_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    POSTAL_CODE_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_FIELD_NUMBER: builtins.int
    client_id: builtins.int
    name: typing.Text
    abbreviation: typing.Text
    email: typing.Text
    address: typing.Text
    postal_code: builtins.int
    phone_number: typing.Text
    def __init__(self,
        *,
        client_id: builtins.int = ...,
        name: typing.Text = ...,
        abbreviation: typing.Text = ...,
        email: typing.Text = ...,
        address: typing.Text = ...,
        postal_code: builtins.int = ...,
        phone_number: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["abbreviation",b"abbreviation","address",b"address","client_id",b"client_id","email",b"email","name",b"name","phone_number",b"phone_number","postal_code",b"postal_code"]) -> None: ...
global___Client = Client

class ClientResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    CLIENT_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def client(self) -> global___Client: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        client: typing.Optional[global___Client] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client",b"client","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["client",b"client","response",b"response"]) -> None: ...
global___ClientResponse = ClientResponse

class ClientFilter(google.protobuf.message.Message):
    """Filter the types of clients to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ClientFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CLIENT_ID: ClientFilter._Field.ValueType  # 0
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    CLIENT_ID: ClientFilter.Field.ValueType  # 0

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___ClientFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___ClientFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___ClientFilter = ClientFilter

class ClientQuery(google.protobuf.message.Message):
    """Get specific types clients as specified in the Filter. 
    If one wants to get all objects, leave filters empty. 
    A default limit of 10 will be used if the field is empty.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTERS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClientFilter]: ...
    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def order_by(self) -> global___OrderByClient:
        """Order the queries, by default the order is desc by creation date"""
        pass
    def __init__(self,
        *,
        filters: typing.Optional[typing.Iterable[global___ClientFilter]] = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        order_by: typing.Optional[global___OrderByClient] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip"]) -> None: ...
global___ClientQuery = ClientQuery

class OrderByClient(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___ClientFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___ClientFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByClient = OrderByClient

class UserToken(google.protobuf.message.Message):
    """**************************************************************************
                             USER TOKEN MESSAGES                              *
    **************************************************************************

    Message used to provide a user token to the client
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    USER_TOKEN_ID_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    CREATION_DATETIME_FIELD_NUMBER: builtins.int
    EXPIRY_DATETIME_FIELD_NUMBER: builtins.int
    user_token_id: builtins.int
    @property
    def user(self) -> global___User: ...
    token: typing.Text
    creation_datetime: typing.Text
    """Format must be in: YYYY-MM-DD HH:MM:SS"""

    expiry_datetime: typing.Text
    """Format must be in: YYYY-MM-DD HH:MM:SS"""

    def __init__(self,
        *,
        user_token_id: builtins.int = ...,
        user: typing.Optional[global___User] = ...,
        token: typing.Text = ...,
        creation_datetime: typing.Text = ...,
        expiry_datetime: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["user",b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["creation_datetime",b"creation_datetime","expiry_datetime",b"expiry_datetime","token",b"token","user",b"user","user_token_id",b"user_token_id"]) -> None: ...
global___UserToken = UserToken

class UserTokenResponse(google.protobuf.message.Message):
    """Replies with a user token"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    USERTOKEN_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def userToken(self) -> global___UserToken: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        userToken: typing.Optional[global___UserToken] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["response",b"response","userToken",b"userToken"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["response",b"response","userToken",b"userToken"]) -> None: ...
global___UserTokenResponse = UserTokenResponse

class UserTokenFilter(google.protobuf.message.Message):
    """Filter the types of clients to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[UserTokenFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        USER_ID: UserTokenFilter._Field.ValueType  # 0
        EXPIRY: UserTokenFilter._Field.ValueType  # 1
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    USER_ID: UserTokenFilter.Field.ValueType  # 0
    EXPIRY: UserTokenFilter.Field.ValueType  # 1

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___UserTokenFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___UserTokenFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___UserTokenFilter = UserTokenFilter

class UserTokenQuery(google.protobuf.message.Message):
    """Get specific types of user tokens as specified in the Filter. 
    If one wants to get all objects, leave filters empty. 
    A default limit of 10 will be used if the field is empty.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTERS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserTokenFilter]: ...
    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def order_by(self) -> global___OrderByUserToken:
        """Order the queries, by default the order is desc by creation date"""
        pass
    def __init__(self,
        *,
        filters: typing.Optional[typing.Iterable[global___UserTokenFilter]] = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        order_by: typing.Optional[global___OrderByUserToken] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip"]) -> None: ...
global___UserTokenQuery = UserTokenQuery

class OrderByUserToken(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___UserTokenFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___UserTokenFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByUserToken = OrderByUserToken

class LoginRequest(google.protobuf.message.Message):
    """**************************************************************************
                                SECURITY MESSAGES                            *
    **************************************************************************

    Any client that wishes to login send their hashed password to the backend  
    for authentication.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    USER_EMAIL_FIELD_NUMBER: builtins.int
    HASHED_PASSWORD_FIELD_NUMBER: builtins.int
    user_email: typing.Text
    """The user to login"""

    hashed_password: typing.Text
    def __init__(self,
        *,
        user_email: typing.Text = ...,
        hashed_password: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hashed_password",b"hashed_password","user_email",b"user_email"]) -> None: ...
global___LoginRequest = LoginRequest

class ResponseNonce(google.protobuf.message.Message):
    """Used to provide nonces"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    NONCE_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    nonce: typing.Text
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        nonce: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["nonce",b"nonce","response",b"response"]) -> None: ...
global___ResponseNonce = ResponseNonce

class SecurityStringResponse(google.protobuf.message.Message):
    """Returns the security string that is tied to the user"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    SECURITY_STRING_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    security_string: typing.Text
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        security_string: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["response",b"response","security_string",b"security_string"]) -> None: ...
global___SecurityStringResponse = SecurityStringResponse

class Broadcast(google.protobuf.message.Message):
    """**************************************************************************
                             BROADCASTING MESSAGES                           *
    **************************************************************************

    The default fields of a broadcast
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _BroadcastType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _BroadcastTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Broadcast._BroadcastType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ANNOUNCEMENT: Broadcast._BroadcastType.ValueType  # 0
        ASSIGNMENT: Broadcast._BroadcastType.ValueType  # 1
    class BroadcastType(_BroadcastType, metaclass=_BroadcastTypeEnumTypeWrapper):
        pass

    ANNOUNCEMENT: Broadcast.BroadcastType.ValueType  # 0
    ASSIGNMENT: Broadcast.BroadcastType.ValueType  # 1

    class _UrgencyType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UrgencyTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Broadcast._UrgencyType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LOW: Broadcast._UrgencyType.ValueType  # 0
        MEDIUM: Broadcast._UrgencyType.ValueType  # 1
        HIGH: Broadcast._UrgencyType.ValueType  # 2
    class UrgencyType(_UrgencyType, metaclass=_UrgencyTypeEnumTypeWrapper):
        pass

    LOW: Broadcast.UrgencyType.ValueType  # 0
    MEDIUM: Broadcast.UrgencyType.ValueType  # 1
    HIGH: Broadcast.UrgencyType.ValueType  # 2

    BROADCAST_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    CREATION_DATE_FIELD_NUMBER: builtins.int
    DEADLINE_FIELD_NUMBER: builtins.int
    CREATOR_FIELD_NUMBER: builtins.int
    RECIPIENTS_FIELD_NUMBER: builtins.int
    URGENCY_FIELD_NUMBER: builtins.int
    broadcast_id: builtins.int
    """Broadcast IDs are only useful for the backend database."""

    type: global___Broadcast.BroadcastType.ValueType
    content: typing.Text
    @property
    def creation_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def deadline(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def creator(self) -> global___User:
        """The whole user fields does not need to be filled, 
        as long as the user is identifiable.
        """
        pass
    @property
    def recipients(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AIFSBroadcastRecipient]: ...
    urgency: global___Broadcast.UrgencyType.ValueType
    def __init__(self,
        *,
        broadcast_id: builtins.int = ...,
        type: global___Broadcast.BroadcastType.ValueType = ...,
        content: typing.Text = ...,
        creation_date: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        deadline: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        creator: typing.Optional[global___User] = ...,
        recipients: typing.Optional[typing.Iterable[global___AIFSBroadcastRecipient]] = ...,
        urgency: global___Broadcast.UrgencyType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["creation_date",b"creation_date","creator",b"creator","deadline",b"deadline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["broadcast_id",b"broadcast_id","content",b"content","creation_date",b"creation_date","creator",b"creator","deadline",b"deadline","recipients",b"recipients","type",b"type","urgency",b"urgency"]) -> None: ...
global___Broadcast = Broadcast

class AIFSBroadcastRecipient(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RECIPIENT_FIELD_NUMBER: builtins.int
    AIFS_ID_FIELD_NUMBER: builtins.int
    @property
    def recipient(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BroadcastRecipient]: ...
    aifs_id: builtins.int
    def __init__(self,
        *,
        recipient: typing.Optional[typing.Iterable[global___BroadcastRecipient]] = ...,
        aifs_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["aifs_id",b"aifs_id","recipient",b"recipient"]) -> None: ...
global___AIFSBroadcastRecipient = AIFSBroadcastRecipient

class BroadcastRecipient(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BROADCAST_RECIPIENTS_ID_FIELD_NUMBER: builtins.int
    RECIPIENT_FIELD_NUMBER: builtins.int
    ACKNOWLEDGED_FIELD_NUMBER: builtins.int
    REJECTED_FIELD_NUMBER: builtins.int
    LAST_REPLIED_FIELD_NUMBER: builtins.int
    AIFS_ID_FIELD_NUMBER: builtins.int
    broadcast_recipients_id: builtins.int
    @property
    def recipient(self) -> global___User: ...
    acknowledged: builtins.bool
    rejected: builtins.bool
    @property
    def last_replied(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    aifs_id: builtins.int
    def __init__(self,
        *,
        broadcast_recipients_id: builtins.int = ...,
        recipient: typing.Optional[global___User] = ...,
        acknowledged: builtins.bool = ...,
        rejected: builtins.bool = ...,
        last_replied: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        aifs_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_replied",b"last_replied","recipient",b"recipient"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["acknowledged",b"acknowledged","aifs_id",b"aifs_id","broadcast_recipients_id",b"broadcast_recipients_id","last_replied",b"last_replied","recipient",b"recipient","rejected",b"rejected"]) -> None: ...
global___BroadcastRecipient = BroadcastRecipient

class BroadcastResponse(google.protobuf.message.Message):
    """Passing around multiple broadcasts in one message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    BROADCAST_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def broadcast(self) -> global___Broadcast: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        broadcast: typing.Optional[global___Broadcast] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["broadcast",b"broadcast","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["broadcast",b"broadcast","response",b"response"]) -> None: ...
global___BroadcastResponse = BroadcastResponse

class BroadcastFilter(google.protobuf.message.Message):
    """Filter the types of broadcasts to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BroadcastFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        BROADCAST_ID: BroadcastFilter._Field.ValueType  # 0
        TYPE: BroadcastFilter._Field.ValueType  # 1
        CONTENT: BroadcastFilter._Field.ValueType  # 2
        CREATION_DATE: BroadcastFilter._Field.ValueType  # 3
        DEADLINE: BroadcastFilter._Field.ValueType  # 4
        CREATOR_ID: BroadcastFilter._Field.ValueType  # 5
        """Creator and recipient values should 
        be the user id of these users
        """

        RECEIPEIENT_ID: BroadcastFilter._Field.ValueType  # 6
        """Note: Single recipient"""

        NUM_RECEIPIENTS: BroadcastFilter._Field.ValueType  # 7
        URGENCY: BroadcastFilter._Field.ValueType  # 8
        AIFS_ID: BroadcastFilter._Field.ValueType  # 9
        BROADCAST_RECIPIENT_TABLE_ID: BroadcastFilter._Field.ValueType  # 10
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    BROADCAST_ID: BroadcastFilter.Field.ValueType  # 0
    TYPE: BroadcastFilter.Field.ValueType  # 1
    CONTENT: BroadcastFilter.Field.ValueType  # 2
    CREATION_DATE: BroadcastFilter.Field.ValueType  # 3
    DEADLINE: BroadcastFilter.Field.ValueType  # 4
    CREATOR_ID: BroadcastFilter.Field.ValueType  # 5
    """Creator and recipient values should 
    be the user id of these users
    """

    RECEIPEIENT_ID: BroadcastFilter.Field.ValueType  # 6
    """Note: Single recipient"""

    NUM_RECEIPIENTS: BroadcastFilter.Field.ValueType  # 7
    URGENCY: BroadcastFilter.Field.ValueType  # 8
    AIFS_ID: BroadcastFilter.Field.ValueType  # 9
    BROADCAST_RECIPIENT_TABLE_ID: BroadcastFilter.Field.ValueType  # 10

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___BroadcastFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___BroadcastFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___BroadcastFilter = BroadcastFilter

class BroadcastQuery(google.protobuf.message.Message):
    """Get specific types users as specified in the Filter. 
    If one wants to get all objects, leave filters empty. 
    A default limit of 10 will be used if the field is empty.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTERS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BroadcastFilter]: ...
    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def order_by(self) -> global___OrderByBroadcast:
        """Order the queries, by default the order is desc by creation date"""
        pass
    def __init__(self,
        *,
        filters: typing.Optional[typing.Iterable[global___BroadcastFilter]] = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        order_by: typing.Optional[global___OrderByBroadcast] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip"]) -> None: ...
global___BroadcastQuery = BroadcastQuery

class OrderByBroadcast(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___BroadcastFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___BroadcastFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByBroadcast = OrderByBroadcast

class Roster(google.protobuf.message.Message):
    """**************************************************************************
                               ROSTERING MESSAGES                            *
    **************************************************************************

    The default fields of a roster
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Roster._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        IS_DEFAULT: Roster._Status.ValueType  # 0
        PENDING: Roster._Status.ValueType  # 1
        CONFIRMED: Roster._Status.ValueType  # 2
        REJECTED: Roster._Status.ValueType  # 3
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    IS_DEFAULT: Roster.Status.ValueType  # 0
    PENDING: Roster.Status.ValueType  # 1
    CONFIRMED: Roster.Status.ValueType  # 2
    REJECTED: Roster.Status.ValueType  # 3

    ROSTERING_ID_FIELD_NUMBER: builtins.int
    AIFS_ID_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    CLIENTS_FIELD_NUMBER: builtins.int
    GUARD_ASSIGNED_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    rostering_id: builtins.int
    """Roster IDs are only useful for the backend database."""

    aifs_id: builtins.int
    start_time: typing.Text
    """Format must be in: YYYY-MM-DD HH:MM:SS"""

    end_time: typing.Text
    @property
    def clients(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AIFSClientRoster]: ...
    @property
    def guard_assigned(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RosterAssignement]: ...
    status: global___Roster.Status.ValueType
    """The roster is not actually in the database"""

    def __init__(self,
        *,
        rostering_id: builtins.int = ...,
        aifs_id: builtins.int = ...,
        start_time: typing.Text = ...,
        end_time: typing.Text = ...,
        clients: typing.Optional[typing.Iterable[global___AIFSClientRoster]] = ...,
        guard_assigned: typing.Optional[typing.Iterable[global___RosterAssignement]] = ...,
        status: global___Roster.Status.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["aifs_id",b"aifs_id","clients",b"clients","end_time",b"end_time","guard_assigned",b"guard_assigned","rostering_id",b"rostering_id","start_time",b"start_time","status",b"status"]) -> None: ...
global___Roster = Roster

class AIFSClientRoster(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    AIFS_CLIENT_ROSTER_ID_FIELD_NUMBER: builtins.int
    CLIENT_FIELD_NUMBER: builtins.int
    PATROL_ORDER_FIELD_NUMBER: builtins.int
    aifs_client_roster_id: builtins.int
    @property
    def client(self) -> global___Client: ...
    patrol_order: builtins.int
    def __init__(self,
        *,
        aifs_client_roster_id: builtins.int = ...,
        client: typing.Optional[global___Client] = ...,
        patrol_order: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client",b"client"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aifs_client_roster_id",b"aifs_client_roster_id","client",b"client","patrol_order",b"patrol_order"]) -> None: ...
global___AIFSClientRoster = AIFSClientRoster

class RosterAssignement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ROSTER_ASSIGNMENT_ID_FIELD_NUMBER: builtins.int
    GUARD_ASSIGNED_FIELD_NUMBER: builtins.int
    CUSTOM_START_TIME_FIELD_NUMBER: builtins.int
    CUSTOM_END_TIME_FIELD_NUMBER: builtins.int
    CONFIRMED_FIELD_NUMBER: builtins.int
    ATTENDED_FIELD_NUMBER: builtins.int
    ATTENDANCE_TIME_FIELD_NUMBER: builtins.int
    IS_ASSIGNED_FIELD_NUMBER: builtins.int
    REJECTED_FIELD_NUMBER: builtins.int
    roster_assignment_id: builtins.int
    @property
    def guard_assigned(self) -> global___EmployeeEvaluation:
        """The whole user fields does not need to be filled, 
        as long as the user is identifiable.
        """
        pass
    @property
    def custom_start_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def custom_end_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    confirmed: builtins.bool
    attended: builtins.bool
    @property
    def attendance_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    is_assigned: builtins.bool
    """If the assignment is part of the current assignment
    or if it was previously assigned and is now removed
    """

    rejected: builtins.bool
    def __init__(self,
        *,
        roster_assignment_id: builtins.int = ...,
        guard_assigned: typing.Optional[global___EmployeeEvaluation] = ...,
        custom_start_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        custom_end_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        confirmed: builtins.bool = ...,
        attended: builtins.bool = ...,
        attendance_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        is_assigned: builtins.bool = ...,
        rejected: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attendance_time",b"attendance_time","custom_end_time",b"custom_end_time","custom_start_time",b"custom_start_time","guard_assigned",b"guard_assigned"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attendance_time",b"attendance_time","attended",b"attended","confirmed",b"confirmed","custom_end_time",b"custom_end_time","custom_start_time",b"custom_start_time","guard_assigned",b"guard_assigned","is_assigned",b"is_assigned","rejected",b"rejected","roster_assignment_id",b"roster_assignment_id"]) -> None: ...
global___RosterAssignement = RosterAssignement

class BulkRosters(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ROSTERS_FIELD_NUMBER: builtins.int
    @property
    def rosters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Roster]: ...
    def __init__(self,
        *,
        rosters: typing.Optional[typing.Iterable[global___Roster]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rosters",b"rosters"]) -> None: ...
global___BulkRosters = BulkRosters

class RosterResponse(google.protobuf.message.Message):
    """Passing around multiple roster in one message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    ROSTER_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def roster(self) -> global___Roster: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        roster: typing.Optional[global___Roster] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["response",b"response","roster",b"roster"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["response",b"response","roster",b"roster"]) -> None: ...
global___RosterResponse = RosterResponse

class RosterAssignmentResponse(google.protobuf.message.Message):
    """Passing around multiple roster assignments in one message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    ROSTER_ASSIGNMENT_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def roster_assignment(self) -> global___RosterAssignement: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        roster_assignment: typing.Optional[global___RosterAssignement] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["response",b"response","roster_assignment",b"roster_assignment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["response",b"response","roster_assignment",b"roster_assignment"]) -> None: ...
global___RosterAssignmentResponse = RosterAssignmentResponse

class RosterFilter(google.protobuf.message.Message):
    """Filter the types of rosters to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RosterFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ROSTER_ID: RosterFilter._Field.ValueType  # 0
        ROSTER_ASSIGNMENT_ID: RosterFilter._Field.ValueType  # 1
        ROSTER_AIFS_CLIENT_ID: RosterFilter._Field.ValueType  # 2
        AIFS_ID: RosterFilter._Field.ValueType  # 3
        GUARD_ASSIGNED_ID: RosterFilter._Field.ValueType  # 4
        """Note: single user ID"""

        CLIENT_ID: RosterFilter._Field.ValueType  # 5
        """Note: single client ID"""

        GUARD_ASSIGNMENT_CONFIRMATION: RosterFilter._Field.ValueType  # 6
        GUARD_ASSIGNMENT_ATTENDED: RosterFilter._Field.ValueType  # 7
        START_TIME: RosterFilter._Field.ValueType  # 8
        END_TIME: RosterFilter._Field.ValueType  # 9
        IS_ASSIGNED: RosterFilter._Field.ValueType  # 10
        DEFAULT_ROSTERING_DAY_OF_WEEK: RosterFilter._Field.ValueType  # 11
        GUARD_ASSIGNMENT_REJECTION: RosterFilter._Field.ValueType  # 12
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    ROSTER_ID: RosterFilter.Field.ValueType  # 0
    ROSTER_ASSIGNMENT_ID: RosterFilter.Field.ValueType  # 1
    ROSTER_AIFS_CLIENT_ID: RosterFilter.Field.ValueType  # 2
    AIFS_ID: RosterFilter.Field.ValueType  # 3
    GUARD_ASSIGNED_ID: RosterFilter.Field.ValueType  # 4
    """Note: single user ID"""

    CLIENT_ID: RosterFilter.Field.ValueType  # 5
    """Note: single client ID"""

    GUARD_ASSIGNMENT_CONFIRMATION: RosterFilter.Field.ValueType  # 6
    GUARD_ASSIGNMENT_ATTENDED: RosterFilter.Field.ValueType  # 7
    START_TIME: RosterFilter.Field.ValueType  # 8
    END_TIME: RosterFilter.Field.ValueType  # 9
    IS_ASSIGNED: RosterFilter.Field.ValueType  # 10
    DEFAULT_ROSTERING_DAY_OF_WEEK: RosterFilter.Field.ValueType  # 11
    GUARD_ASSIGNMENT_REJECTION: RosterFilter.Field.ValueType  # 12

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___RosterFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___RosterFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___RosterFilter = RosterFilter

class RosterQuery(google.protobuf.message.Message):
    """Get specific types rosters as specified in the Filter. 
    If one wants to get all objects, leave filters empty. 
    A default limit of 10 will be used if the field is empty.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTERS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RosterFilter]: ...
    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def order_by(self) -> global___OrderByRoster:
        """Order the queries, by default the order is desc by creation date"""
        pass
    def __init__(self,
        *,
        filters: typing.Optional[typing.Iterable[global___RosterFilter]] = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        order_by: typing.Optional[global___OrderByRoster] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip"]) -> None: ...
global___RosterQuery = RosterQuery

class OrderByRoster(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___RosterFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___RosterFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByRoster = OrderByRoster

class AvailabilityQuery(google.protobuf.message.Message):
    """**************************************************************************
                    ROSTERING AVAILABILITY MESSAGES                          *
    **************************************************************************

    Note that this query only checks for users 
    available for the whole time between a start 
    and end time.

    TODO: Find out if the user should be available
    throughout the whole duration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    FILTERS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    start_time: typing.Text
    end_time: typing.Text
    """If end time is null, the time period is taken 
    to be from the start time + 12h
    """

    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailabilityFilter]:
        """The client has no current need to fill this up."""
        pass
    @property
    def order_by(self) -> global___OrderByQuery: ...
    def __init__(self,
        *,
        start_time: typing.Text = ...,
        end_time: typing.Text = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        filters: typing.Optional[typing.Iterable[global___AvailabilityFilter]] = ...,
        order_by: typing.Optional[global___OrderByQuery] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip","start_time",b"start_time"]) -> None: ...
global___AvailabilityQuery = AvailabilityQuery

class OrderByQuery(google.protobuf.message.Message):
    """TODO change name"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___AvailabilityFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___AvailabilityFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByQuery = OrderByQuery

class AvailabilityFilter(google.protobuf.message.Message):
    """Filter the types of availabilty to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AvailabilityFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        AVAILABILITY_ID: AvailabilityFilter._Field.ValueType  # 0
        WEEK: AvailabilityFilter._Field.ValueType  # 1
        """Week of the year"""

        YEAR: AvailabilityFilter._Field.ValueType  # 2
        GUARD_ID: AvailabilityFilter._Field.ValueType  # 3
        """Note: single user ID"""

        SUN: AvailabilityFilter._Field.ValueType  # 4
        """Day of the week to look at
        The values for these fields in Filter comparisons
        should be an empty string
        """

        MON: AvailabilityFilter._Field.ValueType  # 5
        TUES: AvailabilityFilter._Field.ValueType  # 6
        WED: AvailabilityFilter._Field.ValueType  # 7
        THURS: AvailabilityFilter._Field.ValueType  # 8
        FRI: AvailabilityFilter._Field.ValueType  # 9
        SAT: AvailabilityFilter._Field.ValueType  # 10
        NEXT_SUN: AvailabilityFilter._Field.ValueType  # 11
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    AVAILABILITY_ID: AvailabilityFilter.Field.ValueType  # 0
    WEEK: AvailabilityFilter.Field.ValueType  # 1
    """Week of the year"""

    YEAR: AvailabilityFilter.Field.ValueType  # 2
    GUARD_ID: AvailabilityFilter.Field.ValueType  # 3
    """Note: single user ID"""

    SUN: AvailabilityFilter.Field.ValueType  # 4
    """Day of the week to look at
    The values for these fields in Filter comparisons
    should be an empty string
    """

    MON: AvailabilityFilter.Field.ValueType  # 5
    TUES: AvailabilityFilter.Field.ValueType  # 6
    WED: AvailabilityFilter.Field.ValueType  # 7
    THURS: AvailabilityFilter.Field.ValueType  # 8
    FRI: AvailabilityFilter.Field.ValueType  # 9
    SAT: AvailabilityFilter.Field.ValueType  # 10
    NEXT_SUN: AvailabilityFilter.Field.ValueType  # 11

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___AvailabilityFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___AvailabilityFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___AvailabilityFilter = AvailabilityFilter

class EmployeeEvaluationResponse(google.protobuf.message.Message):
    """**************************************************************************
                   ROSTERING EMPLOYEE EVALUATION MESSAGES                    *
    **************************************************************************
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    EMPLOYEE_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def employee(self) -> global___EmployeeEvaluation: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        employee: typing.Optional[global___EmployeeEvaluation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["employee",b"employee","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["employee",b"employee","response",b"response"]) -> None: ...
global___EmployeeEvaluationResponse = EmployeeEvaluationResponse

class EmployeeEvaluation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EMPLOYEE_FIELD_NUMBER: builtins.int
    EMPLOYEE_SCORE_FIELD_NUMBER: builtins.int
    IS_AVAILABLE_FIELD_NUMBER: builtins.int
    @property
    def employee(self) -> global___User: ...
    employee_score: builtins.float
    is_available: builtins.bool
    """This is used if it is needed to determine 
    if the employee is available within a previously 
    specified time.
    """

    def __init__(self,
        *,
        employee: typing.Optional[global___User] = ...,
        employee_score: builtins.float = ...,
        is_available: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["employee",b"employee"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["employee",b"employee","employee_score",b"employee_score","is_available",b"is_available"]) -> None: ...
global___EmployeeEvaluation = EmployeeEvaluation

class IncidentReport(google.protobuf.message.Message):
    """**************************************************************************
                          INCIDENT REPORTING MESSAGES                         *
    **************************************************************************

    The default fields of an incident report
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ReportType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ReportTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[IncidentReport._ReportType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FIRE_ALARM: IncidentReport._ReportType.ValueType  # 0
        INTRUDER: IncidentReport._ReportType.ValueType  # 1
        OTHERS: IncidentReport._ReportType.ValueType  # 2
    class ReportType(_ReportType, metaclass=_ReportTypeEnumTypeWrapper):
        pass

    FIRE_ALARM: IncidentReport.ReportType.ValueType  # 0
    INTRUDER: IncidentReport.ReportType.ValueType  # 1
    OTHERS: IncidentReport.ReportType.ValueType  # 2

    INCIDENT_REPORT_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CREATOR_FIELD_NUMBER: builtins.int
    CREATION_DATE_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_DATE_FIELD_NUMBER: builtins.int
    LAST_MODIFED_USER_FIELD_NUMBER: builtins.int
    IS_ORIGINAL_FIELD_NUMBER: builtins.int
    IS_APPROVED_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    APPROVAL_DATE_FIELD_NUMBER: builtins.int
    INCIDENT_REPORT_CONTENT_FIELD_NUMBER: builtins.int
    AIFS_ID_FIELD_NUMBER: builtins.int
    incident_report_id: builtins.int
    """Report IDs are only useful for the backend database."""

    type: global___IncidentReport.ReportType.ValueType
    @property
    def creator(self) -> global___User: ...
    creation_date: typing.Text
    """Format must be in: YYYY-MM-DD HH:MM:SS"""

    last_modified_date: typing.Text
    @property
    def last_modifed_user(self) -> global___User: ...
    is_original: builtins.bool
    is_approved: builtins.bool
    @property
    def signature(self) -> global___User: ...
    approval_date: typing.Text
    @property
    def incident_report_content(self) -> global___IncidentReportContent: ...
    aifs_id: builtins.int
    """Which AIFS was the creator from"""

    def __init__(self,
        *,
        incident_report_id: builtins.int = ...,
        type: global___IncidentReport.ReportType.ValueType = ...,
        creator: typing.Optional[global___User] = ...,
        creation_date: typing.Text = ...,
        last_modified_date: typing.Text = ...,
        last_modifed_user: typing.Optional[global___User] = ...,
        is_original: builtins.bool = ...,
        is_approved: builtins.bool = ...,
        signature: typing.Optional[global___User] = ...,
        approval_date: typing.Text = ...,
        incident_report_content: typing.Optional[global___IncidentReportContent] = ...,
        aifs_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["creator",b"creator","incident_report_content",b"incident_report_content","last_modifed_user",b"last_modifed_user","signature",b"signature"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aifs_id",b"aifs_id","approval_date",b"approval_date","creation_date",b"creation_date","creator",b"creator","incident_report_content",b"incident_report_content","incident_report_id",b"incident_report_id","is_approved",b"is_approved","is_original",b"is_original","last_modifed_user",b"last_modifed_user","last_modified_date",b"last_modified_date","signature",b"signature","type",b"type"]) -> None: ...
global___IncidentReport = IncidentReport

class IncidentReportContent(google.protobuf.message.Message):
    """The actual content of the report"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REPORT_CONTENT_ID_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_DATE_FIELD_NUMBER: builtins.int
    LAST_MODIFED_USER_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    INCIDENT_TIME_FIELD_NUMBER: builtins.int
    IS_POLICE_NOTIFIED_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HAS_ACTION_TAKEN_FIELD_NUMBER: builtins.int
    ACTION_TAKEN_FIELD_NUMBER: builtins.int
    HAS_INJURY_FIELD_NUMBER: builtins.int
    INJURY_DESCRIPTION_FIELD_NUMBER: builtins.int
    HAS_STOLEN_ITEM_FIELD_NUMBER: builtins.int
    STOLEN_ITEM_DESCRIPTION_FIELD_NUMBER: builtins.int
    REPORT_IMAGE_LINK_FIELD_NUMBER: builtins.int
    report_content_id: builtins.int
    last_modified_date: typing.Text
    """Format must be in: YYYY-MM-DD HH:MM:SS"""

    @property
    def last_modifed_user(self) -> global___User: ...
    address: typing.Text
    incident_time: typing.Text
    is_police_notified: builtins.bool
    title: typing.Text
    description: typing.Text
    has_action_taken: builtins.bool
    action_taken: typing.Text
    has_injury: builtins.bool
    injury_description: typing.Text
    has_stolen_item: builtins.bool
    stolen_item_description: typing.Text
    report_image_link: typing.Text
    """Should there be a string here?"""

    def __init__(self,
        *,
        report_content_id: builtins.int = ...,
        last_modified_date: typing.Text = ...,
        last_modifed_user: typing.Optional[global___User] = ...,
        address: typing.Text = ...,
        incident_time: typing.Text = ...,
        is_police_notified: builtins.bool = ...,
        title: typing.Text = ...,
        description: typing.Text = ...,
        has_action_taken: builtins.bool = ...,
        action_taken: typing.Text = ...,
        has_injury: builtins.bool = ...,
        injury_description: typing.Text = ...,
        has_stolen_item: builtins.bool = ...,
        stolen_item_description: typing.Text = ...,
        report_image_link: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_modifed_user",b"last_modifed_user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_taken",b"action_taken","address",b"address","description",b"description","has_action_taken",b"has_action_taken","has_injury",b"has_injury","has_stolen_item",b"has_stolen_item","incident_time",b"incident_time","injury_description",b"injury_description","is_police_notified",b"is_police_notified","last_modifed_user",b"last_modifed_user","last_modified_date",b"last_modified_date","report_content_id",b"report_content_id","report_image_link",b"report_image_link","stolen_item_description",b"stolen_item_description","title",b"title"]) -> None: ...
global___IncidentReportContent = IncidentReportContent

class IncidentReportResponse(google.protobuf.message.Message):
    """Passing around multiple reports in one message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    INCIDENT_REPORT_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def incident_report(self) -> global___IncidentReport: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        incident_report: typing.Optional[global___IncidentReport] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["incident_report",b"incident_report","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["incident_report",b"incident_report","response",b"response"]) -> None: ...
global___IncidentReportResponse = IncidentReportResponse

class IncidentReportFilter(google.protobuf.message.Message):
    """Filter the types of incident reports to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[IncidentReportFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        REPORT_ID: IncidentReportFilter._Field.ValueType  # 0
        REPORT_CONTENT_ID: IncidentReportFilter._Field.ValueType  # 1
        REPORT_TYPE: IncidentReportFilter._Field.ValueType  # 2
        MODIFIER: IncidentReportFilter._Field.ValueType  # 3
        LAST_MODIFIED_DATE: IncidentReportFilter._Field.ValueType  # 5
        GET_ORIGINAL: IncidentReportFilter._Field.ValueType  # 6
        IS_APPROVED: IncidentReportFilter._Field.ValueType  # 7
        SIGNATURE: IncidentReportFilter._Field.ValueType  # 8
        APPROVAL_DATE: IncidentReportFilter._Field.ValueType  # 9
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    REPORT_ID: IncidentReportFilter.Field.ValueType  # 0
    REPORT_CONTENT_ID: IncidentReportFilter.Field.ValueType  # 1
    REPORT_TYPE: IncidentReportFilter.Field.ValueType  # 2
    MODIFIER: IncidentReportFilter.Field.ValueType  # 3
    LAST_MODIFIED_DATE: IncidentReportFilter.Field.ValueType  # 5
    GET_ORIGINAL: IncidentReportFilter.Field.ValueType  # 6
    IS_APPROVED: IncidentReportFilter.Field.ValueType  # 7
    SIGNATURE: IncidentReportFilter.Field.ValueType  # 8
    APPROVAL_DATE: IncidentReportFilter.Field.ValueType  # 9

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___IncidentReportFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___IncidentReportFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___IncidentReportFilter = IncidentReportFilter

class IncidentReportQuery(google.protobuf.message.Message):
    """Get specific types rosters as specified in the Filter. 
    If one wants to get all objects, leave filters empty. 
    A default limit of 10 will be used if the field is empty.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTERS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IncidentReportFilter]: ...
    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def order_by(self) -> global___OrderByIncidentReport:
        """Order the queries, by default the order is desc by creation date"""
        pass
    def __init__(self,
        *,
        filters: typing.Optional[typing.Iterable[global___IncidentReportFilter]] = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        order_by: typing.Optional[global___OrderByIncidentReport] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip"]) -> None: ...
global___IncidentReportQuery = IncidentReportQuery

class OrderByIncidentReport(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___IncidentReportFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___IncidentReportFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByIncidentReport = OrderByIncidentReport

class CameraIot(google.protobuf.message.Message):
    """**************************************************************************
                             CAMERA IOT MESSAGES                             *
    **************************************************************************

    Camera and Iot Monitoring and Controls
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _MessageType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MessageTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CameraIot._MessageType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INITIAL: CameraIot._MessageType.ValueType  # 0
        CHANGE_GATE: CameraIot._MessageType.ValueType  # 1
        CHANGE_FIRE_ALARM: CameraIot._MessageType.ValueType  # 2
        CHANGE_CPU_TEMP: CameraIot._MessageType.ValueType  # 3
    class MessageType(_MessageType, metaclass=_MessageTypeEnumTypeWrapper):
        pass

    INITIAL: CameraIot.MessageType.ValueType  # 0
    CHANGE_GATE: CameraIot.MessageType.ValueType  # 1
    CHANGE_FIRE_ALARM: CameraIot.MessageType.ValueType  # 2
    CHANGE_CPU_TEMP: CameraIot.MessageType.ValueType  # 3

    CAMERA_IOT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CAMERA_FIELD_NUMBER: builtins.int
    GATE_FIELD_NUMBER: builtins.int
    FIRE_ALARM_FIELD_NUMBER: builtins.int
    CPU_TEMPERATURE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    camera_iot_id: builtins.int
    """The ID ties the request to a paricular location"""

    name: typing.Text
    @property
    def camera(self) -> global___Camera:
        """Devices"""
        pass
    @property
    def gate(self) -> iot_prototype_pb2.GateState: ...
    @property
    def fire_alarm(self) -> iot_prototype_pb2.FireAlarmState: ...
    @property
    def cpu_temperature(self) -> iot_prototype_pb2.CpuTempState: ...
    type: global___CameraIot.MessageType.ValueType
    def __init__(self,
        *,
        camera_iot_id: builtins.int = ...,
        name: typing.Text = ...,
        camera: typing.Optional[global___Camera] = ...,
        gate: typing.Optional[iot_prototype_pb2.GateState] = ...,
        fire_alarm: typing.Optional[iot_prototype_pb2.FireAlarmState] = ...,
        cpu_temperature: typing.Optional[iot_prototype_pb2.CpuTempState] = ...,
        type: global___CameraIot.MessageType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["camera",b"camera","cpu_temperature",b"cpu_temperature","fire_alarm",b"fire_alarm","gate",b"gate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["camera",b"camera","camera_iot_id",b"camera_iot_id","cpu_temperature",b"cpu_temperature","fire_alarm",b"fire_alarm","gate",b"gate","name",b"name","type",b"type"]) -> None: ...
global___CameraIot = CameraIot

class Camera(google.protobuf.message.Message):
    """camera identifier"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    URL_FIELD_NUMBER: builtins.int
    url: typing.Text
    def __init__(self,
        *,
        url: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["url",b"url"]) -> None: ...
global___Camera = Camera

class CameraIotResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESPONSE_FIELD_NUMBER: builtins.int
    CAMERA_IOT_FIELD_NUMBER: builtins.int
    @property
    def response(self) -> global___Response: ...
    @property
    def camera_iot(self) -> global___CameraIot: ...
    def __init__(self,
        *,
        response: typing.Optional[global___Response] = ...,
        camera_iot: typing.Optional[global___CameraIot] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["camera_iot",b"camera_iot","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["camera_iot",b"camera_iot","response",b"response"]) -> None: ...
global___CameraIotResponse = CameraIotResponse

class CameraIotFilter(google.protobuf.message.Message):
    """Filter the types of camera iot attributes to be returned."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Field:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FieldEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CameraIotFilter._Field.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CAMERA_IOT_ID: CameraIotFilter._Field.ValueType  # 0
    class Field(_Field, metaclass=_FieldEnumTypeWrapper):
        """More fields can be added in the future."""
        pass

    CAMERA_IOT_ID: CameraIotFilter.Field.ValueType  # 0

    FIELD_FIELD_NUMBER: builtins.int
    COMPARISONS_FIELD_NUMBER: builtins.int
    field: global___CameraIotFilter.Field.ValueType
    @property
    def comparisons(self) -> global___Filter: ...
    def __init__(self,
        *,
        field: global___CameraIotFilter.Field.ValueType = ...,
        comparisons: typing.Optional[global___Filter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparisons",b"comparisons","field",b"field"]) -> None: ...
global___CameraIotFilter = CameraIotFilter

class CameraIotQuery(google.protobuf.message.Message):
    """Get specific types camera Iot attributes as specified in the Filter. 
    If one wants to get all objects, leave filters empty. 
    A default limit of 10 will be used if the field is empty.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTERS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CameraIotFilter]: ...
    limit: builtins.int
    """Limit the number of objects being returned. 
    If only 5 objects should be shown, limit = 5;
    """

    skip: builtins.int
    """Skip n rows from the database"""

    @property
    def order_by(self) -> global___OrderByCameraIot:
        """Order the queries, by default the order is desc id"""
        pass
    def __init__(self,
        *,
        filters: typing.Optional[typing.Iterable[global___CameraIotFilter]] = ...,
        limit: builtins.int = ...,
        skip: builtins.int = ...,
        order_by: typing.Optional[global___OrderByCameraIot] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["order_by",b"order_by"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filters",b"filters","limit",b"limit","order_by",b"order_by","skip",b"skip"]) -> None: ...
global___CameraIotQuery = CameraIotQuery

class OrderByCameraIot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    field: global___CameraIotFilter.Field.ValueType
    order_by: global___OrderBy.ValueType
    def __init__(self,
        *,
        field: global___CameraIotFilter.Field.ValueType = ...,
        order_by: global___OrderBy.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field",b"field","order_by",b"order_by"]) -> None: ...
global___OrderByCameraIot = OrderByCameraIot

class Response(google.protobuf.message.Message):
    """Generic reponses to add or update requests"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Response._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ACK: Response._Type.ValueType  # 0
        ERROR: Response._Type.ValueType  # 1
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    ACK: Response.Type.ValueType  # 0
    ERROR: Response.Type.ValueType  # 1

    TYPE_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    PRIMARY_KEY_FIELD_NUMBER: builtins.int
    type: global___Response.Type.ValueType
    error_message: typing.Text
    primary_key: builtins.int
    """Return any pk of the row that the query modified"""

    def __init__(self,
        *,
        type: global___Response.Type.ValueType = ...,
        error_message: typing.Text = ...,
        primary_key: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error_message",b"error_message","primary_key",b"primary_key","type",b"type"]) -> None: ...
global___Response = Response

class Filter(google.protobuf.message.Message):
    """This is used to indicate what kind of objects should be returned that
    fit this critera. 
    For example, if one wishes to get all broadcasts that have more than 
    one recipient. They might put the comparison as GREATER, value = 1;
    The field to be compared with is in the corresponding XXXFilter message.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Comparisons:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ComparisonsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Filter._Comparisons.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        GREATER: Filter._Comparisons.ValueType  # 0
        GREATER_EQ: Filter._Comparisons.ValueType  # 1
        EQUAL: Filter._Comparisons.ValueType  # 2
        LESSER_EQ: Filter._Comparisons.ValueType  # 3
        LESSER: Filter._Comparisons.ValueType  # 4
        CONTAINS: Filter._Comparisons.ValueType  # 5
        IN: Filter._Comparisons.ValueType  # 6
        NOT_IN: Filter._Comparisons.ValueType  # 7
    class Comparisons(_Comparisons, metaclass=_ComparisonsEnumTypeWrapper):
        pass

    GREATER: Filter.Comparisons.ValueType  # 0
    GREATER_EQ: Filter.Comparisons.ValueType  # 1
    EQUAL: Filter.Comparisons.ValueType  # 2
    LESSER_EQ: Filter.Comparisons.ValueType  # 3
    LESSER: Filter.Comparisons.ValueType  # 4
    CONTAINS: Filter.Comparisons.ValueType  # 5
    IN: Filter.Comparisons.ValueType  # 6
    NOT_IN: Filter.Comparisons.ValueType  # 7

    COMPARISON_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    comparison: global___Filter.Comparisons.ValueType
    value: typing.Text
    def __init__(self,
        *,
        comparison: global___Filter.Comparisons.ValueType = ...,
        value: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["comparison",b"comparison","value",b"value"]) -> None: ...
global___Filter = Filter
